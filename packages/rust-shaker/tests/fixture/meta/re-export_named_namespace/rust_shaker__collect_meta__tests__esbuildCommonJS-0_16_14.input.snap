---
source: src/collect_meta.rs
description: "var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if ((from && typeof from === 'object') || typeof from === 'function') {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, {\n          get: () => from[key],\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable,\n        });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (\n  (target = mod != null ? __create(__getProtoOf(mod)) : {}),\n  __copyProps(\n    // If the importer is in node compatibility mode or this is not an ESM\n    // file that has been converted to a CommonJS file using a Babel-\n    // compatible transform (i.e. \"__esModule\" has not been set), then set\n    // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n    isNodeMode || !mod || !mod.__esModule\n      ? __defProp(target, 'default', { value: mod, enumerable: true })\n      : target,\n    mod\n  )\n);\nvar __toCommonJS = (mod) =>\n  __copyProps(__defProp({}, '__esModule', { value: true }), mod);\nvar source_exports = {};\n__export(source_exports, {\n  ns: () => ns,\n});\nmodule.exports = __toCommonJS(source_exports);\nvar ns = __toESM(require('unknown-package'));\n"
input_file: tests/fixture/meta/re-export_named_namespace/esbuildCommonJS-0_16_14.input.js
---
Meta {
    cjs: true,
    es_module: true,
    imports: [],
    exports: [
        ReexportNamespace {
            exported: "ns",
            source: "unknown-package",
        },
    ],
}
