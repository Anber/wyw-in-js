---
source: src/collect_imports_and_exports.rs
description: "'use strict';\nvar __createBinding =\n  (this && this.__createBinding) ||\n  (Object.create\n    ? function (o, m, k, k2) {\n        if (k2 === undefined) k2 = k;\n        Object.defineProperty(o, k2, {\n          enumerable: true,\n          get: function () {\n            return m[k];\n          },\n        });\n      }\n    : function (o, m, k, k2) {\n        if (k2 === undefined) k2 = k;\n        o[k2] = m[k];\n      });\nvar __exportStar =\n  (this && this.__exportStar) ||\n  function (m, exports) {\n    for (var p in m)\n      if (p !== 'default' && !Object.prototype.hasOwnProperty.call(exports, p))\n        __createBinding(exports, m, p);\n  };\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.isUnnecessaryReactCall = exports.syncResolve = void 0;\nvar asyncResolveFallback_1 = require('./asyncResolveFallback');\nObject.defineProperty(exports, 'syncResolve', {\n  enumerable: true,\n  get: function () {\n    return asyncResolveFallback_1.syncResolve;\n  },\n});\n__exportStar(require('./collectExportsAndImports'), exports);\nvar isUnnecessaryReactCall_1 = require('./isUnnecessaryReactCall');\nObject.defineProperty(exports, 'isUnnecessaryReactCall', {\n  enumerable: true,\n  get: function () {\n    return isUnnecessaryReactCall_1.default;\n  },\n});\nexports.default = 123;\n"
input_file: tests/fixture/meta/re-export_mixed_exports/typescriptCommonJS-4_0_2.input.js
---
Meta {
    imports: [],
    exports: [
        Default,
        Named {
            local: BooleanLiteral(
                true,
            ),
            exported: "__esModule",
        },
        Reexport {
            orig: "syncResolve",
            exported: "syncResolve",
            source: "./asyncResolveFallback",
        },
        Reexport {
            orig: "default",
            exported: "isUnnecessaryReactCall",
            source: "./isUnnecessaryReactCall",
        },
        ReexportAll(
            "./collectExportsAndImports",
        ),
    ],
}
